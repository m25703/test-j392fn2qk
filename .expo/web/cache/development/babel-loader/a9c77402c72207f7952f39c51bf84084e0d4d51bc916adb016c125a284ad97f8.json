{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OngoingMealScreen = function OngoingMealScreen() {\n  var days = {\n    \"Monday\": {\n      \"Breakfast\": [\"Poha\", \"Sev / Namkeen\", \"Boiled Sweet Corn\", \"Omelette\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Lemon Rice\", \"Plain Rice\", \"Moong Dal\", \"Rasam\", \"Torai Chana Dry\", \"Chole Masala\", \"Plain Roti / Fulka Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Vada Pav\", \"Green Chutney & Dry Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Mix Dal\", \"Black Channa Masala Dry\", \"Aloo Rasewalla\", \"Poori\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Kheer\"]\n    },\n    \"Tuesday\": {\n      \"Breakfast\": [\"Upma / Sheera\", \"Coconut Chutney\", \"Boiled Peanuts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Onion Fried Rice\", \"Plain Rice\", \"Arhar Dal\", \"Sambhar\", \"Moong Masala Dry\", \"Gobi Mutter Rasewalla\", \"Plain Roti / Butter Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Dahi Wada\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Corn Rice\", \"Plain Rice\", \"Moong Dal\", \"Paneer Kohlapuri\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Gulab Jamun\"]\n    },\n    \"Wednesday\": {\n      \"Breakfast\": [\"Methi Paratha\", \"Veg Korma\", \"Channa Masala\", \"Egg Bhurji\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Curd Rice\", \"Plain Rice\", \"Masoor Dal\", \"Rasam\", \"Cabbage Capsicum Dry\", \"Manchurian Gravy\", \"Plain Roti / Butter Roti\", \"Lassi\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Veg Cutlet\", \"Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Dal Tadka\", \"Kashmiri Dum Aloo\", \"Chawali Masala\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Ice Cream / Kulfi\"]\n    },\n    \"Thursday\": {\n      \"Breakfast\": [\"Idli Vada\", \"Sambar / Chutney\", \"Black Channa Sprouts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Lemon Rice\", \"Plain Rice\", \"Dal Palak\", \"Sambhar\", \"Bhindi Fry\", \"Soya Chunks Masala Dry\", \"Plain Roti / Butter Roti\", \"Curd\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Pav Bhaji\", \"Chopped Onion & Lemon\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Jeera Rice\", \"Dal Tadka\", \"Paneer Chilli\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Moong Dal Halwa\"]\n    },\n    \"Friday\": {\n      \"Breakfast\": [\"Poori\", \"Chole\", \"Green Moong Sprouts\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Veg Biryani\", \"Egg Biryani\", \"Veg Raita\", \"Mix Veg Curry\", \"Plain Roti / Fulka Roti\", \"Rasna\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Veg Maggi\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Tomato Rice\", \"Plain Rice\", \"Mix Dal\", \"Mushroom Masala\", \"Rajma Masala\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Fruit Custard\"]\n    },\n    \"Saturday\": {\n      \"Breakfast\": [\"Masala Dosa\", \"Sambar / Chutney\", \"Matki Sprouts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Jeera Rice\", \"Dal Tadka\", \"Sambhar\", \"Gawar Masala Dry\", \"Aloo Mutter\", \"Plain Roti / Butter Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Samosa\", \"Green Chilli & Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Onion Masala Rice\", \"Plain Rice\", \"Dal Panchratna\", \"Matki Masala Dry\", \"Veg Kadhai Gravy\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Ice Cream\"]\n    },\n    \"Sunday\": {\n      \"Breakfast\": [\"Aloo Paratha\", \"Curd\", \"Green Moong Sprouts\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Plain Rice\", \"Toor Dal\", \"Egg Curry\", \"Paneer Tawa Masala\", \"Plain Roti / Butter Roti\", \"Mango Rasna\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Pakoda\", \"Green Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Veg Pulao\", \"Raita\", \"Green Chawli Subzi\", \"Mix Veg Curry\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Kala Jamun\"]\n    }\n  };\n  var getCurrentMeal = function getCurrentMeal() {\n    var currentDayIndex = new Date().getDay();\n    var currentDayName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][currentDayIndex];\n    var currentDayMenu = days[currentDayName];\n    var currentTime = new Date();\n    var currentHour = currentTime.getHours();\n    var currentMeal;\n    if (currentHour >= 7 && currentHour < 11) {\n      currentMeal = 'Breakfast';\n    } else if (currentHour >= 11 && currentHour < 15) {\n      currentMeal = 'Lunch';\n    } else if (currentHour >= 15 && currentHour < 18) {\n      currentMeal = 'Snacks';\n    } else {\n      currentMeal = 'Dinner';\n    }\n    return currentDayMenu[currentMeal];\n  };\n  var _useState = useState(getCurrentMeal()),\n    _useState2 = _slicedToArray(_useState, 2),\n    ongoingMeal = _useState2[0],\n    setOngoingMeal = _useState2[1];\n  useEffect(function () {\n    var interval = setInterval(function () {\n      var currentMeal = getCurrentMeal();\n      setOngoingMeal(currentMeal);\n    }, 1000 * 60);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Ongoing Meal\"\n    }), _jsxs(View, {\n      style: styles.mealContainer,\n      children: [_jsx(Text, {\n        style: styles.mealText,\n        children: \"Current Meal:\"\n      }), _jsx(View, {\n        style: styles.mealItemsContainer,\n        children: ongoingMeal.map(function (item, index) {\n          return _jsx(View, {\n            style: styles.mealItem,\n            children: _jsx(Text, {\n              style: styles.mealItemText,\n              children: item\n            })\n          }, index);\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5',\n    padding: 20\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  mealContainer: {\n    alignItems: 'center'\n  },\n  mealText: {\n    fontSize: 18,\n    marginBottom: 10\n  },\n  mealItemsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  mealItem: {\n    backgroundColor: '#E0E0E0',\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    margin: 5\n  },\n  mealItemText: {\n    fontSize: 14,\n    textAlign: 'center'\n  }\n});\nexport default OngoingMealScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","OngoingMealScreen","days","getCurrentMeal","currentDayIndex","Date","getDay","currentDayName","currentDayMenu","currentTime","currentHour","getHours","currentMeal","_useState","_useState2","_slicedToArray","ongoingMeal","setOngoingMeal","interval","setInterval","clearInterval","style","styles","container","children","headerText","mealContainer","mealText","mealItemsContainer","map","item","index","mealItem","mealItemText","create","flex","justifyContent","alignItems","backgroundColor","padding","fontSize","fontWeight","marginBottom","flexDirection","flexWrap","borderRadius","paddingHorizontal","paddingVertical","margin","textAlign"],"sources":["C:/Users/mgupt/Downloads/mm-app-main/mm-app-main/OngoingMealScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst OngoingMealScreen = () => {\n  const days = {\n    \"Monday\": {\n      \"Breakfast\": [\"Poha\", \"Sev / Namkeen\", \"Boiled Sweet Corn\", \"Omelette\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Lemon Rice\", \"Plain Rice\", \"Moong Dal\", \"Rasam\", \"Torai Chana Dry\", \"Chole Masala\", \"Plain Roti / Fulka Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Vada Pav\", \"Green Chutney & Dry Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Mix Dal\", \"Black Channa Masala Dry\", \"Aloo Rasewalla\", \"Poori\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Kheer\"]\n    },\n    \"Tuesday\": {\n      \"Breakfast\": [\"Upma / Sheera\", \"Coconut Chutney\", \"Boiled Peanuts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Onion Fried Rice\", \"Plain Rice\", \"Arhar Dal\", \"Sambhar\", \"Moong Masala Dry\", \"Gobi Mutter Rasewalla\", \"Plain Roti / Butter Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Dahi Wada\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Corn Rice\", \"Plain Rice\", \"Moong Dal\", \"Paneer Kohlapuri\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Gulab Jamun\"]\n    },\n    \"Wednesday\": {\n      \"Breakfast\": [\"Methi Paratha\", \"Veg Korma\", \"Channa Masala\", \"Egg Bhurji\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Curd Rice\", \"Plain Rice\", \"Masoor Dal\", \"Rasam\", \"Cabbage Capsicum Dry\", \"Manchurian Gravy\", \"Plain Roti / Butter Roti\", \"Lassi\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Veg Cutlet\", \"Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Dal Tadka\", \"Kashmiri Dum Aloo\", \"Chawali Masala\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Ice Cream / Kulfi\"]\n    },\n    \"Thursday\": {\n      \"Breakfast\": [\"Idli Vada\", \"Sambar / Chutney\", \"Black Channa Sprouts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Lemon Rice\", \"Plain Rice\", \"Dal Palak\", \"Sambhar\", \"Bhindi Fry\", \"Soya Chunks Masala Dry\", \"Plain Roti / Butter Roti\", \"Curd\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Pav Bhaji\", \"Chopped Onion & Lemon\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Plain Rice\", \"Jeera Rice\", \"Dal Tadka\", \"Paneer Chilli\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Moong Dal Halwa\"]\n    },\n    \"Friday\": {\n      \"Breakfast\": [\"Poori\", \"Chole\", \"Green Moong Sprouts\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Veg Biryani\", \"Egg Biryani\", \"Veg Raita\", \"Mix Veg Curry\", \"Plain Roti / Fulka Roti\", \"Rasna\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Veg Maggi\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Tomato Rice\", \"Plain Rice\", \"Mix Dal\", \"Mushroom Masala\", \"Rajma Masala\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Fruit Custard\"]\n    },\n    \"Saturday\": {\n      \"Breakfast\": [\"Masala Dosa\", \"Sambar / Chutney\", \"Matki Sprouts\", \"Boiled Egg\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Jeera Rice\", \"Dal Tadka\", \"Sambhar\", \"Gawar Masala Dry\", \"Aloo Mutter\", \"Plain Roti / Butter Roti\", \"Buttermilk\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Samosa\", \"Green Chilli & Red Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Onion Masala Rice\", \"Plain Rice\", \"Dal Panchratna\", \"Matki Masala Dry\", \"Veg Kadhai Gravy\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Ice Cream\"]\n    },\n    \"Sunday\": {\n      \"Breakfast\": [\"Aloo Paratha\", \"Curd\", \"Green Moong Sprouts\", \"Banana\", \"Corn Flakes\", \"BBJ / Pickle\", \"Coffee / Bournvita / Milk\"],\n      \"Lunch\": [\"Plain Rice\", \"Toor Dal\", \"Egg Curry\", \"Paneer Tawa Masala\", \"Plain Roti / Butter Roti\", \"Mango Rasna\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\"],\n      \"Snacks\": [\"Pakoda\", \"Green Chutney\", \"Banana\", \"BBJ / Tea / Coffee\"],\n      \"Dinner\": [\"Veg Pulao\", \"Raita\", \"Green Chawli Subzi\", \"Mix Veg Curry\", \"Plain Roti / Fulka Roti\", \"Green Chilli / Lemon Slices\", \"Salad / Papad / Pickle\", \"Kala Jamun\"]\n    }\n  };\n\n  const getCurrentMeal = () => {\n    const currentDayIndex = new Date().getDay();\n    const currentDayName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][currentDayIndex];\n    const currentDayMenu = days[currentDayName];\n\n    const currentTime = new Date();\n    const currentHour = currentTime.getHours();\n    let currentMeal;\n\n    if (currentHour >= 7 && currentHour < 11) {\n      currentMeal = 'Breakfast';\n    } else if (currentHour >= 11 && currentHour < 15) {\n      currentMeal = 'Lunch';\n    } else if (currentHour >= 15 && currentHour < 18) {\n      currentMeal = 'Snacks';\n    } else {\n      currentMeal = 'Dinner';\n    }\n\n    return currentDayMenu[currentMeal];\n  };\n\n  const [ongoingMeal, setOngoingMeal] = useState(getCurrentMeal());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentMeal = getCurrentMeal();\n      setOngoingMeal(currentMeal);\n    }, 1000 * 60); // Update every minute\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Ongoing Meal</Text>\n      <View style={styles.mealContainer}>\n        <Text style={styles.mealText}>Current Meal:</Text>\n        <View style={styles.mealItemsContainer}>\n          {ongoingMeal.map((item, index) => (\n            <View key={index} style={styles.mealItem}>\n              <Text style={styles.mealItemText}>{item}</Text>\n            </View>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5',\n    padding: 20,\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  mealContainer: {\n    alignItems: 'center',\n  },\n  mealText: {\n    fontSize: 18,\n    marginBottom: 10,\n  },\n  mealItemsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  mealItem: {\n    backgroundColor: '#E0E0E0',\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    margin: 5,\n  },\n  mealItemText: {\n    fontSize: 14,\n    textAlign: 'center',\n  },\n});\n\nexport default OngoingMealScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
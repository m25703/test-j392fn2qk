{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log('Login clicked');\n    console.log('Username:', username);\n    console.log('Password:', password);\n    navigation.navigate('Home');\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"./lbi.jpg\"),\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Username\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: username,\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        activeOpacity: 0.7,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentContainer: {\n    width: '80%',\n    padding: 20,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.27,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 5,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  loginButton: {\n    backgroundColor: 'rgba(47,47,47,1)',\n    borderRadius: 5,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","TouchableOpacity","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","console","log","navigate","source","require","style","styles","container","children","contentContainer","label","input","value","onChangeText","text","secureTextEntry","loginButton","onPress","activeOpacity","loginButtonText","create","flex","justifyContent","alignItems","width","padding","backgroundColor","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","marginBottom","color","borderWidth","borderColor","paddingHorizontal","paddingVertical","textAlign"],"sources":["C:/Users/mgupt/OneDrive/Desktop/cpy4/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, TouchableOpacity, StyleSheet, ImageBackground } from 'react-native';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Perform login logic here (e.g., API call)\r\n    console.log('Login clicked');\r\n    console.log('Username:', username);\r\n    console.log('Password:', password);\r\n    // go to homepage once authentication is complete\r\n    navigation.navigate('Home');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('./lbi.jpg')} // Provide the path to your background image\r\n      style={styles.container}\r\n    >\r\n      <View style={styles.contentContainer}>\r\n        <Text style={styles.label}>Username</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={username}\r\n          onChangeText={(text) => setUsername(text)}\r\n        />\r\n\r\n        <Text style={styles.label}>Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          secureTextEntry={true}\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={styles.loginButton}\r\n          onPress={handleLogin}\r\n          activeOpacity={0.7}\r\n        >\r\n          <Text style={styles.loginButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  contentContainer: {\r\n    width: '80%',\r\n    padding: 20,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)', // Use an rgba color for a semi-transparent background\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.27,\r\n    shadowRadius: 4.65,\r\n    elevation: 6,\r\n  },\r\n  label: {\r\n    fontSize: 18,\r\n    marginBottom: 5,\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n    marginBottom: 20,\r\n    paddingHorizontal: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: 'rgba(47,47,47,1)',\r\n    borderRadius: 5,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginButtonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
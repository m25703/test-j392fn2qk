{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { GoogleSignIn } from 'expo-google-sign-in';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log('Login clicked');\n      console.log('Username:', username);\n      console.log('Password:', password);\n      try {\n        yield GoogleSignIn.askForPlayServicesAsync();\n        var _yield$GoogleSignIn$s = yield GoogleSignIn.signInAsync(),\n          type = _yield$GoogleSignIn$s.type,\n          user = _yield$GoogleSignIn$s.user;\n        if (type === 'success') {\n          var idToken = user.auth.idToken;\n          var response = yield fetch({\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              idToken: idToken\n            })\n          });\n          if (response.status === 200) {\n            navigation.navigate('Dashboard');\n          } else {\n            console.error('Authentication failed');\n          }\n        } else {\n          console.error('Google Sign-In failed');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Username\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: username,\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        activeOpacity: 0.7,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Login\"\n        })\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsxs(TouchableOpacity, {\n        style: styles.googleButton,\n        activeOpacity: 0.7,\n        children: [_jsx(FontAwesome, {\n          name: \"google\",\n          size: 20,\n          color: \"white\",\n          style: styles.googleIcon\n        }), _jsx(Text, {\n          style: styles.googleButtonText,\n          children: \"Sign In with Google\"\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5'\n  },\n  contentContainer: {\n    width: '80%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 5,\n    color: '#333'\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    marginBottom: 20,\n    paddingHorizontal: 10\n  },\n  loginButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 5,\n    paddingVertical: 12,\n    alignItems: 'center'\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#ccc',\n    marginVertical: 20\n  },\n  googleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4285F4',\n    borderRadius: 5,\n    paddingVertical: 12,\n    paddingHorizontal: 20\n  },\n  googleIcon: {\n    marginRight: 10\n  },\n  googleButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","FontAwesome","GoogleSignIn","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","_asyncToGenerator","console","log","askForPlayServicesAsync","_yield$GoogleSignIn$s","signInAsync","type","user","idToken","auth","response","fetch","method","headers","body","JSON","stringify","status","navigate","error","apply","arguments","style","styles","container","children","contentContainer","label","input","value","onChangeText","text","secureTextEntry","loginButton","onPress","activeOpacity","loginButtonText","divider","googleButton","name","size","color","googleIcon","googleButtonText","create","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","marginBottom","borderWidth","borderColor","paddingHorizontal","paddingVertical","fontWeight","marginVertical","flexDirection","marginRight"],"sources":["C:/Users/mgupt/Downloads/mm-app-main/mm-app-main/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { GoogleSignIn } from 'expo-google-sign-in'; // Import the GoogleSignIn module\n\nconst LoginScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    console.log('Login clicked');\n    console.log('Username:', username);\n    console.log('Password:', password);\n\n    try {\n      await GoogleSignIn.askForPlayServicesAsync();\n      const { type, user } = await GoogleSignIn.signInAsync();\n      if (type === 'success') {\n        const idToken = user.auth.idToken;\n        const response = await fetch({\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ idToken }),\n        });\n\n        if (response.status === 200) {\n          navigation.navigate('Dashboard');\n        } else {\n          console.error('Authentication failed');\n        }\n      } else {\n        console.error('Google Sign-In failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.contentContainer}>\n        <Text style={styles.label}>Username</Text>\n        <TextInput\n          style={styles.input}\n          value={username}\n          onChangeText={(text) => setUsername(text)}\n        />\n\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          secureTextEntry={true}\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin} activeOpacity={0.7}>\n          <Text style={styles.loginButtonText}>Login</Text>\n        </TouchableOpacity>\n\n        <View style={styles.divider}></View>\n\n        <TouchableOpacity style={styles.googleButton} activeOpacity={0.7}>\n          <FontAwesome name=\"google\" size={20} color=\"white\" style={styles.googleIcon} />\n          <Text style={styles.googleButtonText}>Sign In with Google</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5', // Light gray background\n  },\n  contentContainer: {\n    width: '80%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 5,\n    color: '#333',\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n  },\n  loginButton: {\n    backgroundColor: '#007AFF', // Blue login button\n    borderRadius: 5,\n    paddingVertical: 12,\n    alignItems: 'center',\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#ccc',\n    marginVertical: 20,\n  },\n  googleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4285F4', // Google Blue\n    borderRadius: 5,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n  },\n  googleIcon: {\n    marginRight: 10,\n  },\n  googleButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MenuScreen = function MenuScreen() {\n  var days = {\n    \"sunday\": {\n      \"breakfast\": [\"Greek yogurt with mixed berries\", \"sprinkle of granola\"],\n      \"lunch\": [\"Grilled chicken salad\", \"mixed greens\", \"cherry tomatoes\", \"cucumber\", \"balsamic vinaigrette\"],\n      \"snacks\": [\"Baby carrots\", \"hummus\"],\n      \"dinner\": [\"Baked salmon\", \"quinoa\", \"steamed broccoli\"]\n    },\n    \"monday\": {\n      \"breakfast\": [\"Oatmeal with sliced banana\", \"spoonful of almond butter\"],\n      \"lunch\": [\"Turkey and avocado wrap\", \"whole wheat tortilla\", \"lettuce\", \"mustard\"],\n      \"snacks\": [\"Apple slices\", \"handful of almonds\"],\n      \"dinner\": [\"Stir-fried tofu\", \"brown rice\", \"stir-fried vegetables (bell peppers, snap peas, carrots)\", \"light soy sauce\"]\n    },\n    \"tuesday\": {\n      \"breakfast\": [\"Scrambled eggs with spinach\", \"feta cheese\"],\n      \"lunch\": [\"Quinoa salad\", \"black beans\", \"corn\", \"red onion\", \"lime vinaigrette\"],\n      \"snacks\": [\"Greek yogurt\", \"honey\"],\n      \"dinner\": [\"Grilled lean steak\", \"sweet potato\", \"side salad\"]\n    },\n    \"wednesday\": {\n      \"breakfast\": [\"Whole-grain toast with avocado\", \"poached egg\"],\n      \"lunch\": [\"Lentil soup\", \"side of whole-grain crackers\"],\n      \"snacks\": [\"Mixed nuts (almonds, walnuts, cashews)\"],\n      \"dinner\": [\"Grilled chicken breast\", \"roasted Brussels sprouts\", \"quinoa\"]\n    },\n    \"thursday\": {\n      \"breakfast\": [\"Smoothie with spinach\", \"banana\", \"almond milk\", \"scoop of protein powder\"],\n      \"lunch\": [\"Chickpea and vegetable wrap\", \"tahini sauce\", \"whole wheat tortilla\"],\n      \"snacks\": [\"Cottage cheese\", \"pineapple chunks\"],\n      \"dinner\": [\"Baked cod\", \"asparagus\", \"quinoa pilaf\"]\n    },\n    \"friday\": {\n      \"breakfast\": [\"Greek yogurt parfait\", \"granola\", \"sliced strawberries\"],\n      \"lunch\": [\"Grilled vegetable and mozzarella panini\", \"whole-grain bread\"],\n      \"snacks\": [\"Rice cakes\", \"almond butter\"],\n      \"dinner\": [\"Shrimp stir-fry\", \"brown rice\", \"mixed vegetables\", \"teriyaki sauce\"]\n    },\n    \"saturday\": {\n      \"breakfast\": [\"Whole-grain pancakes\", \"mixed berries\"],\n      \"lunch\": [\"Spinach and feta stuffed chicken breast\", \"steamed broccoli\"],\n      \"snacks\": [\"Rice crackers\", \"guacamole\"],\n      \"dinner\": [\"Lentil and vegetable curry\", \"brown rice\"]\n    }\n  };\n  var currentDayIndex = new Date().getDay();\n  var currentDayMenu = days[currentDayIndex];\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: _jsxs(View, {\n      style: styles.dayContainer,\n      children: [_jsxs(Text, {\n        style: styles.dayText,\n        children: [currentDayMenu.day, \":\"]\n      }), currentDayMenu.meals.map(function (meal, mealIndex) {\n        return _jsx(View, {\n          style: styles.mealContainer,\n          children: _jsx(Text, {\n            style: styles.mealText,\n            children: meal\n          })\n        }, mealIndex);\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#F5F5F5'\n  },\n  dayContainer: {\n    marginBottom: 20\n  },\n  dayText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  mealContainer: {\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    marginBottom: 5,\n    borderWidth: 1,\n    borderColor: '#DDDDDD',\n    borderRadius: 5\n  },\n  mealText: {\n    fontSize: 16\n  }\n});\nexport default MenuScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","jsxs","_jsxs","jsx","_jsx","MenuScreen","days","currentDayIndex","Date","getDay","currentDayMenu","contentContainerStyle","styles","container","children","style","dayContainer","dayText","day","meals","map","meal","mealIndex","mealContainer","mealText","create","padding","backgroundColor","marginBottom","fontSize","fontWeight","borderWidth","borderColor","borderRadius"],"sources":["C:/Users/mgupt/OneDrive/Desktop/cpy4/MenuScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\n\r\nconst MenuScreen = () => {\r\n    const days = {\r\n        \"sunday\": {\r\n          \"breakfast\": [\"Greek yogurt with mixed berries\", \"sprinkle of granola\"],\r\n          \"lunch\": [\"Grilled chicken salad\", \"mixed greens\", \"cherry tomatoes\", \"cucumber\", \"balsamic vinaigrette\"],\r\n          \"snacks\": [\"Baby carrots\", \"hummus\"],\r\n          \"dinner\": [\"Baked salmon\", \"quinoa\", \"steamed broccoli\"]\r\n        },\r\n        \"monday\": {\r\n          \"breakfast\": [\"Oatmeal with sliced banana\", \"spoonful of almond butter\"],\r\n          \"lunch\": [\"Turkey and avocado wrap\", \"whole wheat tortilla\", \"lettuce\", \"mustard\"],\r\n          \"snacks\": [\"Apple slices\", \"handful of almonds\"],\r\n          \"dinner\": [\"Stir-fried tofu\", \"brown rice\", \"stir-fried vegetables (bell peppers, snap peas, carrots)\", \"light soy sauce\"]\r\n        },\r\n        \"tuesday\": {\r\n          \"breakfast\": [\"Scrambled eggs with spinach\", \"feta cheese\"],\r\n          \"lunch\": [\"Quinoa salad\", \"black beans\", \"corn\", \"red onion\", \"lime vinaigrette\"],\r\n          \"snacks\": [\"Greek yogurt\", \"honey\"],\r\n          \"dinner\": [\"Grilled lean steak\", \"sweet potato\", \"side salad\"]\r\n        },\r\n        \"wednesday\": {\r\n          \"breakfast\": [\"Whole-grain toast with avocado\", \"poached egg\"],\r\n          \"lunch\": [\"Lentil soup\", \"side of whole-grain crackers\"],\r\n          \"snacks\": [\"Mixed nuts (almonds, walnuts, cashews)\"],\r\n          \"dinner\": [\"Grilled chicken breast\", \"roasted Brussels sprouts\", \"quinoa\"]\r\n        },\r\n        \"thursday\": {\r\n          \"breakfast\": [\"Smoothie with spinach\", \"banana\", \"almond milk\", \"scoop of protein powder\"],\r\n          \"lunch\": [\"Chickpea and vegetable wrap\", \"tahini sauce\", \"whole wheat tortilla\"],\r\n          \"snacks\": [\"Cottage cheese\", \"pineapple chunks\"],\r\n          \"dinner\": [\"Baked cod\", \"asparagus\", \"quinoa pilaf\"]\r\n        },\r\n        \"friday\": {\r\n          \"breakfast\": [\"Greek yogurt parfait\", \"granola\", \"sliced strawberries\"],\r\n          \"lunch\": [\"Grilled vegetable and mozzarella panini\", \"whole-grain bread\"],\r\n          \"snacks\": [\"Rice cakes\", \"almond butter\"],\r\n          \"dinner\": [\"Shrimp stir-fry\", \"brown rice\", \"mixed vegetables\", \"teriyaki sauce\"]\r\n        },\r\n        \"saturday\": {\r\n          \"breakfast\": [\"Whole-grain pancakes\", \"mixed berries\"],\r\n          \"lunch\": [\"Spinach and feta stuffed chicken breast\", \"steamed broccoli\"],\r\n          \"snacks\": [\"Rice crackers\", \"guacamole\"],\r\n          \"dinner\": [\"Lentil and vegetable curry\", \"brown rice\"]\r\n        }\r\n      }\r\n      \r\n\r\n  // Get the current day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)\r\n  const currentDayIndex = new Date().getDay();\r\n\r\n  // Filter the days array to get the menu for the current day\r\n  const currentDayMenu = days[currentDayIndex];\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <View style={styles.dayContainer}>\r\n        <Text style={styles.dayText}>{currentDayMenu.day}:</Text>\r\n        {currentDayMenu.meals.map((meal, mealIndex) => (\r\n          <View key={mealIndex} style={styles.mealContainer}>\r\n            <Text style={styles.mealText}>{meal}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  dayContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  dayText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  mealContainer: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 10,\r\n    marginBottom: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#DDDDDD',\r\n    borderRadius: 5,\r\n  },\r\n  mealText: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default MenuScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
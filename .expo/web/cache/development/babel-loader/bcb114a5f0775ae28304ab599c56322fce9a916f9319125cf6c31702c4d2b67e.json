{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuScreen = function MenuScreen() {\n  var days = {\n    \"sunday\": {\n      \"breakfast\": [\"Greek yogurt with mixed berries\", \"sprinkle of granola\"],\n      \"lunch\": [\"Grilled chicken salad\", \"mixed greens\", \"cherry tomatoes\", \"cucumber\", \"balsamic vinaigrette\"],\n      \"snacks\": [\"Baby carrots\", \"hummus\"],\n      \"dinner\": [\"Baked salmon\", \"quinoa\", \"steamed broccoli\"]\n    },\n    \"monday\": {\n      \"breakfast\": [\"Oatmeal with sliced banana\", \"spoonful of almond butter\"],\n      \"lunch\": [\"Turkey and avocado wrap\", \"whole wheat tortilla\", \"lettuce\", \"mustard\"],\n      \"snacks\": [\"Apple slices\", \"handful of almonds\"],\n      \"dinner\": [\"Stir-fried tofu\", \"brown rice\", \"stir-fried vegetables (bell peppers, snap peas, carrots)\", \"light soy sauce\"]\n    },\n    \"tuesday\": {\n      \"breakfast\": [\"Scrambled eggs with spinach\", \"feta cheese\"],\n      \"lunch\": [\"Quinoa salad\", \"black beans\", \"corn\", \"red onion\", \"lime vinaigrette\"],\n      \"snacks\": [\"Greek yogurt\", \"honey\"],\n      \"dinner\": [\"Grilled lean steak\", \"sweet potato\", \"side salad\"]\n    },\n    \"wednesday\": {\n      \"breakfast\": [\"Whole-grain toast with avocado\", \"poached egg\"],\n      \"lunch\": [\"Lentil soup\", \"side of whole-grain crackers\"],\n      \"snacks\": [\"Mixed nuts (almonds, walnuts, cashews)\"],\n      \"dinner\": [\"Grilled chicken breast\", \"roasted Brussels sprouts\", \"quinoa\"]\n    },\n    \"thursday\": {\n      \"breakfast\": [\"Smoothie with spinach\", \"banana\", \"almond milk\", \"scoop of protein powder\"],\n      \"lunch\": [\"Chickpea and vegetable wrap\", \"tahini sauce\", \"whole wheat tortilla\"],\n      \"snacks\": [\"Cottage cheese\", \"pineapple chunks\"],\n      \"dinner\": [\"Baked cod\", \"asparagus\", \"quinoa pilaf\"]\n    },\n    \"friday\": {\n      \"breakfast\": [\"Greek yogurt parfait\", \"granola\", \"sliced strawberries\"],\n      \"lunch\": [\"Grilled vegetable and mozzarella panini\", \"whole-grain bread\"],\n      \"snacks\": [\"Rice cakes\", \"almond butter\"],\n      \"dinner\": [\"Shrimp stir-fry\", \"brown rice\", \"mixed vegetables\", \"teriyaki sauce\"]\n    },\n    \"saturday\": {\n      \"breakfast\": [\"Whole-grain pancakes\", \"mixed berries\"],\n      \"lunch\": [\"Spinach and feta stuffed chicken breast\", \"steamed broccoli\"],\n      \"snacks\": [\"Rice crackers\", \"guacamole\"],\n      \"dinner\": [\"Lentil and vegetable curry\", \"brown rice\"]\n    }\n  };\n  var getCurrentDayMenu = function getCurrentDayMenu() {\n    var currentDayIndex = new Date().getDay();\n    var currentDayName = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'][currentDayIndex];\n    console.log(currentDayName, currentDayIndex);\n    return days[currentDayName];\n  };\n  var MealItem = function MealItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      style: styles.mealContainer,\n      children: _jsx(Text, {\n        style: styles.mealText,\n        children: item\n      })\n    });\n  };\n  var MenuDay = function MenuDay(_ref2) {\n    var day = _ref2.day,\n      meals = _ref2.meals;\n    return _jsxs(View, {\n      style: styles.dayContainer,\n      children: [_jsxs(Text, {\n        style: styles.dayText,\n        children: [day, \":\"]\n      }), meals.map(function (meal, index) {\n        return _jsx(MealItem, {\n          item: meal\n        }, index);\n      })]\n    });\n  };\n  var MenuScreen = function MenuScreen() {\n    var currentDayMenu = getCurrentDayMenu();\n    return _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(MenuDay, {\n        day: \"Breakfast\",\n        meals: currentDayMenu.breakfast\n      }), _jsx(MenuDay, {\n        day: \"Lunch\",\n        meals: currentDayMenu.lunch\n      }), _jsx(MenuDay, {\n        day: \"Snacks\",\n        meals: currentDayMenu.snacks\n      }), _jsx(MenuDay, {\n        day: \"Dinner\",\n        meals: currentDayMenu.dinner\n      })]\n    });\n  };\n  var styles = StyleSheet.create({\n    container: {\n      padding: 20,\n      backgroundColor: '#F5F5F5'\n    },\n    dayContainer: {\n      marginBottom: 20\n    },\n    dayText: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    mealContainer: {\n      backgroundColor: '#FFFFFF',\n      padding: 10,\n      marginBottom: 5,\n      borderWidth: 1,\n      borderColor: '#DDDDDD',\n      borderRadius: 5\n    },\n    mealText: {\n      fontSize: 16\n    }\n  });\n};\nexport default MenuScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","jsx","_jsx","jsxs","_jsxs","MenuScreen","days","getCurrentDayMenu","currentDayIndex","Date","getDay","currentDayName","console","log","MealItem","_ref","item","style","styles","mealContainer","children","mealText","MenuDay","_ref2","day","meals","dayContainer","dayText","map","meal","index","currentDayMenu","contentContainerStyle","container","breakfast","lunch","snacks","dinner","create","padding","backgroundColor","marginBottom","fontSize","fontWeight","borderWidth","borderColor","borderRadius"],"sources":["C:/Users/mgupt/OneDrive/Desktop/cpy4/MenuScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\n\r\nconst MenuScreen = () => {\r\n    const days = {\r\n        \"sunday\": {\r\n          \"breakfast\": [\"Greek yogurt with mixed berries\", \"sprinkle of granola\"],\r\n          \"lunch\": [\"Grilled chicken salad\", \"mixed greens\", \"cherry tomatoes\", \"cucumber\", \"balsamic vinaigrette\"],\r\n          \"snacks\": [\"Baby carrots\", \"hummus\"],\r\n          \"dinner\": [\"Baked salmon\", \"quinoa\", \"steamed broccoli\"]\r\n        },\r\n        \"monday\": {\r\n          \"breakfast\": [\"Oatmeal with sliced banana\", \"spoonful of almond butter\"],\r\n          \"lunch\": [\"Turkey and avocado wrap\", \"whole wheat tortilla\", \"lettuce\", \"mustard\"],\r\n          \"snacks\": [\"Apple slices\", \"handful of almonds\"],\r\n          \"dinner\": [\"Stir-fried tofu\", \"brown rice\", \"stir-fried vegetables (bell peppers, snap peas, carrots)\", \"light soy sauce\"]\r\n        },\r\n        \"tuesday\": {\r\n          \"breakfast\": [\"Scrambled eggs with spinach\", \"feta cheese\"],\r\n          \"lunch\": [\"Quinoa salad\", \"black beans\", \"corn\", \"red onion\", \"lime vinaigrette\"],\r\n          \"snacks\": [\"Greek yogurt\", \"honey\"],\r\n          \"dinner\": [\"Grilled lean steak\", \"sweet potato\", \"side salad\"]\r\n        },\r\n        \"wednesday\": {\r\n          \"breakfast\": [\"Whole-grain toast with avocado\", \"poached egg\"],\r\n          \"lunch\": [\"Lentil soup\", \"side of whole-grain crackers\"],\r\n          \"snacks\": [\"Mixed nuts (almonds, walnuts, cashews)\"],\r\n          \"dinner\": [\"Grilled chicken breast\", \"roasted Brussels sprouts\", \"quinoa\"]\r\n        },\r\n        \"thursday\": {\r\n          \"breakfast\": [\"Smoothie with spinach\", \"banana\", \"almond milk\", \"scoop of protein powder\"],\r\n          \"lunch\": [\"Chickpea and vegetable wrap\", \"tahini sauce\", \"whole wheat tortilla\"],\r\n          \"snacks\": [\"Cottage cheese\", \"pineapple chunks\"],\r\n          \"dinner\": [\"Baked cod\", \"asparagus\", \"quinoa pilaf\"]\r\n        },\r\n        \"friday\": {\r\n          \"breakfast\": [\"Greek yogurt parfait\", \"granola\", \"sliced strawberries\"],\r\n          \"lunch\": [\"Grilled vegetable and mozzarella panini\", \"whole-grain bread\"],\r\n          \"snacks\": [\"Rice cakes\", \"almond butter\"],\r\n          \"dinner\": [\"Shrimp stir-fry\", \"brown rice\", \"mixed vegetables\", \"teriyaki sauce\"]\r\n        },\r\n        \"saturday\": {\r\n          \"breakfast\": [\"Whole-grain pancakes\", \"mixed berries\"],\r\n          \"lunch\": [\"Spinach and feta stuffed chicken breast\", \"steamed broccoli\"],\r\n          \"snacks\": [\"Rice crackers\", \"guacamole\"],\r\n          \"dinner\": [\"Lentil and vegetable curry\", \"brown rice\"]\r\n        }\r\n      }\r\nconst getCurrentDayMenu = () => {\r\n  const currentDayIndex = new Date().getDay();\r\n  const currentDayName = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'][currentDayIndex];\r\n  console.log(currentDayName, currentDayIndex);\r\n  return days[currentDayName];\r\n};\r\n\r\nconst MealItem = ({ item }) => (\r\n  <View style={styles.mealContainer}>\r\n    <Text style={styles.mealText}>{item}</Text>\r\n  </View>\r\n);\r\n\r\nconst MenuDay = ({ day, meals }) => (\r\n  <View style={styles.dayContainer}>\r\n    <Text style={styles.dayText}>{day}:</Text>\r\n    {meals.map((meal, index) => (\r\n      <MealItem key={index} item={meal} />\r\n    ))}\r\n  </View>\r\n);\r\n\r\nconst MenuScreen = () => {\r\n  const currentDayMenu = getCurrentDayMenu();\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <MenuDay day=\"Breakfast\" meals={currentDayMenu.breakfast} />\r\n      <MenuDay day=\"Lunch\" meals={currentDayMenu.lunch} />\r\n      <MenuDay day=\"Snacks\" meals={currentDayMenu.snacks} />\r\n      <MenuDay day=\"Dinner\" meals={currentDayMenu.dinner} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  dayContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  dayText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  mealContainer: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 10,\r\n    marginBottom: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#DDDDDD',\r\n    borderRadius: 5,\r\n  },\r\n  mealText: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n}\r\n\r\nexport default MenuScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}